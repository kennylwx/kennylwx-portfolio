{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["Template","post","data","markdownRemark","className","frontmatter","title","author","date","Date","repoLink","target","rel","href","projectLink","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"oHAAA,wJAyFeA,UA/Ef,YAA6B,IACrBC,EADoB,EAARC,KACAC,eAmClB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcH,EAAKI,YAAYC,OAC7C,yBAAKF,UAAU,aACb,wBAAIA,UAAU,oBACRH,EAAKI,YAAYE,OADvB,IAEE,mCACC,IACD,kBAAC,IAAD,CAAcC,KAAM,IAAIC,KAAKR,EAAKI,YAAYG,SAEhD,yBAAKJ,UAAU,mBA5CnBH,EAAKI,YAAYK,SAEjB,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAMZ,EAAKI,YAAYK,SACvBN,UAAU,qBAEV,kBAAC,IAAD,OAKC,KAIHH,EAAKI,YAAYS,YAEjB,uBACEH,OAAO,SACPC,IAAI,sBACJC,KAAMZ,EAAKI,YAAYS,YACvBV,UAAU,qBAEV,kBAAC,IAAD,OAIC,OAoBD,yBAAKA,UAAU,aAEb,yBAAKW,wBAAyB,CAAEC,OAAQf,EAAKgB,aA0BlD,IAAMC,EAAS","file":"component---src-templates-blog-post-js-88908b5f6dab5a11f90a.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport ReactTimeAgo from 'react-time-ago';\nimport Layout from '../components/layout';\nimport '../styles/blog-post.scss';\nimport GithubIcon from '../assets/icons/github.svg';\nimport LinkIcon from '../assets/icons/link.svg';\n\n\nfunction Template({ data }) {\n  const post = data.markdownRemark;\n\n  const renderRepoLink = () => {\n    if (post.frontmatter.repoLink) {\n      return (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={post.frontmatter.repoLink}\n          className=\"blog-info-links-1\"\n        >\n          <GithubIcon />\n        </a>\n      );\n    }\n\n    return null;\n  };\n\n  const renderProjectLink = () => {\n    if (post.frontmatter.projectLink) {\n      return (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={post.frontmatter.projectLink}\n          className=\"blog-info-links-2\"\n        >\n          <LinkIcon />\n        </a>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Layout>\n      <div className=\"blog-container\">\n        <div className=\"blog-post\">\n          <h1 className=\"blog-title\">{post.frontmatter.title}</h1>\n          <div className=\"blog-info\">\n            <h4 className=\"blog-info-author\">\n              {`${post.frontmatter.author} `}\n              <span>&#8226;</span>\n              {' '}\n              <ReactTimeAgo date={new Date(post.frontmatter.date)} />\n            </h4>\n            <div className=\"blog-info-links\">\n              {renderRepoLink()}\n              {renderProjectLink()}\n            </div>\n          </div>\n          <div className=\"blog-text\">\n            {/* eslint-disable-next-line react/no-danger */}\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nTemplate.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      frontmatter: PropTypes.shape({\n        path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        projectLink: PropTypes.string,\n        repoLink: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default Template;\n\nexport const postQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: {eq: $path } }){\n      html\n      frontmatter {\n        path\n        title\n        author\n        date\n        projectLink\n        repoLink\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}